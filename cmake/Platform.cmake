IF(WIN32)
  IF(MSVC)
    IF((CMAKE_GENERATOR_PLATFORM STREQUAL "x64") OR (CMAKE_GENERATOR MATCHES "Win64"))
      SET(BUILD_ARCH_NAME "x64")
      SET(BUILD_VS_PLATFORM_NAME "x64")
    ELSEIF((CMAKE_GENERATOR_PLATFORM STREQUAL "ARM64") OR (CMAKE_GENERATOR MATCHES "ARM64"))
      SET(BUILD_ARCH_NAME "arm64")
      SET(BUILD_VS_PLATFORM_NAME "ARM64")
    ELSEIF((CMAKE_GENERATOR_PLATFORM STREQUAL "ARM") OR (CMAKE_GENERATOR MATCHES "ARM"))
      SET(BUILD_ARCH_NAME "arm")
      SET(BUILD_VS_PLATFORM_NAME "ARM")
    ELSE()
      MESSAGE(FATAL_ERROR "This CPU architecture is not supported")
    ENDIF()
  ENDIF()
  IF(WINDOWS_STORE)
    SET(BUILD_PLATFORM_NAME "win_store")
    SET(BUILD_PLATFORM_WINDOWS_STORE TRUE)
  ELSE()
    SET(BUILD_PLATFORM_NAME "win")
    SET(BUILD_PLATFORM_WINDOWS_DESKTOP TRUE)
  ENDIF()
  SET(BUILD_PLATFORM_WINDOWS TRUE)
ELSEIF(ANDROID)
  SET(BUILD_PLATFORM_NAME "android")
  SET(BUILD_PLATFORM_ANDROID TRUE)
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  SET(BUILD_PLATFORM_NAME "linux")
  SET(BUILD_PLATFORM_LINUX TRUE)
ELSEIF(IOS)
  SET(BUILD_PLATFORM_NAME "ios")
  SET(BUILD_PLATFORM_IOS TRUE)
ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  IF(IOS)
    SET(BUILD_PLATFORM_NAME "ios")
    SET(BUILD_PLATFORM_IOS TRUE)
  ELSE()
    SET(BUILD_PLATFORM_NAME "darwin")
    SET(BUILD_PLATFORM_DARWIN TRUE)
  ENDIF()
ENDIF()

IF(${CMAKE_HOST_SYSTEM_NAME} STREQUAL "Windows")
  SET(BUILD_HOST_PLATFORM_NAME "win")
  SET(BUILD_HOST_PLATFORM_WINDOWS TRUE)
ELSEIF(${CMAKE_HOST_SYSTEM_NAME} STREQUAL "Linux")
  SET(BUILD_HOST_PLATFORM_NAME "linux")
  SET(BUILD_HOST_PLATFORM_LINUX TRUE)
ELSEIF(${CMAKE_HOST_SYSTEM_NAME} STREQUAL "Darwin")
  SET(BUILD_HOST_PLATFORM_NAME "darwin")
  SET(BUILD_HOST_PLATFORM_DARWIN TRUE)
ENDIF()

IF(NOT BUILD_ARCH_NAME)
  IF((CMAKE_SYSTEM_PROCESSOR MATCHES "AMD64") OR (CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64"))
    SET(BUILD_ARCH_NAME "x64")
  ELSE()
    SET(BUILD_ARCH_NAME "x86")
  ENDIF()
ENDIF()

IF((CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "AMD64") OR (CMAKE_HOST_SYSTEM_PROCESSOR MATCHES "x86_64"))
  SET(BUILD_HOST_ARCH_NAME "x64")
ELSE()
  SET(BUILD_HOST_ARCH_NAME "x86")
ENDIF()

STRING(TOUPPER ${BUILD_ARCH_NAME} BUILD_ARCH_NAME_UPPER)
STRING(TOUPPER ${BUILD_PLATFORM_NAME} BUILD_PLATFORM_NAME_UPPER)
STRING(TOUPPER ${BUILD_HOST_PLATFORM_NAME} BUILD_HOST_PLATFORM_NAME_UPPER)

IF (ANDROID)
  SET(BUILD_PLATFORM_FOLDER_NAME "Android")
ELSEIF(IOS)
  SET(BUILD_PLATFORM_FOLDER_NAME "iOS")
ELSE()
  SET(BUILD_PLATFORM_FOLDER_NAME ${CMAKE_HOST_SYSTEM_NAME})
ENDIF()

IF(BUILD_PLATFORM_ANDROID OR BUILD_PLATFORM_IOS)
  SET(BUILD_PREFERRED_LIB_TYPE "STATIC")
ELSE()
  SET(BUILD_PREFERRED_LIB_TYPE "SHARED")
ENDIF()

IF (BUILD_PLATFORM_WINDOWS_DESKTOP OR BUILD_PLATFORM_LINUX OR BUILD_PLATFORM_DARWIN)
  SET(BUILD_IS_DEV_PLATFORM TRUE)
ELSE()
  SET(BUILD_IS_DEV_PLATFORM FALSE)
ENDIF()
